plugins {
	id 'com.williamhill.wiremock' version '0.4.1'
}

def apiDir = file 'eclipse/api/src/main/java'
def tckDir = file 'eclipse/tck/src/main/java'

sourceSets {
	api {
		java {
			srcDir apiDir
		}
	}
	test {
		java {
			srcDir tckDir
		}
	}
}

dependencies {
	apiCompileOnly 'org.osgi:org.osgi.annotation.versioning:1.0.0'
	apiCompileOnly 'javax.ws.rs:javax.ws.rs-api'
	apiCompileOnly 'javax.annotation:javax.annotation-api'
	apiCompileOnly 'javax.enterprise:cdi-api'

	compileOnly 'javax.ws.rs:javax.ws.rs-api'
	compileOnly 'javax.annotation:javax.annotation-api'
	compileOnly 'javax.json:javax.json-api'
	compileOnly 'javax.enterprise:cdi-api'
	compileOnly 'org.eclipse.microprofile.config:microprofile-config-api'
//	compileOnly 'org.eclipse.microprofile.rest.client:microprofile-rest-client-api'

	compileOnly sourceSets.api.output

	compile project( ':client' )

	testCompile sourceSets.api.output
	testCompile project( ':tests:api' )
	testCompile 'javax.ws.rs:javax.ws.rs-api'
	testCompile 'javax.annotation:javax.annotation-api'
	testCompile 'javax.validation:validation-api'
	testCompile 'javax.annotation:javax.annotation-api'
	testCompile 'javax.json:javax.json-api'
	testCompile 'javax.json.bind:javax.json.bind-api'
	testCompile 'javax.enterprise:cdi-api'
//	testCompile 'org.eclipse.microprofile.rest.client:microprofile-rest-client-api'
//	testCompile 'org.eclipse.microprofile.rest.client:microprofile-rest-client-tck'
	testCompile 'org.testng:testng'

	testCompile 'org.jboss.arquillian.test:arquillian-test-api'
	testCompile 'org.jboss.arquillian.container:arquillian-container-test-api'
	testCompile 'org.jboss.arquillian.testng:arquillian-testng-container'

	testCompile 'org.jboss.shrinkwrap:shrinkwrap-api'
	testCompile 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-impl-gradle-embedded-archive'
	testCompile 'com.github.tomakehurst:wiremock'
	testCompile 'com.github.tomakehurst:wiremock-standalone'
	testCompile 'com.beust:jcommander'

	testRuntime 'org.apache.geronimo.config:geronimo-config-impl'
	testRuntime 'org.glassfish:javax.json'

	testRuntime 'ch.qos.logback:logback-classic'
	testRuntime 'org.glassfish.jersey.core:jersey-client'
	testRuntime 'org.glassfish.jersey.core:jersey-server'
	testRuntime 'org.glassfish.jersey.containers:jersey-container-servlet'
	testRuntime 'org.jboss.weld.servlet:weld-servlet-core'
	testRuntime 'org.glassfish.jersey.ext.cdi:jersey-cdi1x'
	testRuntime 'org.glassfish.jersey.inject:jersey-hk2'
	testRuntime 'org.glassfish.jersey.connectors:jersey-grizzly-connector'
	testRuntime 'org.glassfish.jersey.ext:jersey-bean-validation'
	testRuntime 'com.fasterxml.jackson.core:jackson-annotations'
	testRuntime 'com.fasterxml.jackson.core:jackson-databind'

	testRuntime 'org.jboss.arquillian.protocol:arquillian-protocol-servlet'
	testRuntime 'org.jboss.arquillian.container:arquillian-jetty-embedded-9'
	testRuntime 'org.eclipse.jetty:jetty-server'
	testRuntime 'org.eclipse.jetty:jetty-deploy'
	testRuntime 'org.eclipse.jetty:jetty-annotations'
}

// XXX: Gradle or TestNG doesn't run tests from other source set than 'test'
test {
	enabled = false
}

task arquillian( type: Test ) {
	useTestNG() {
		useDefaultListeners = true

		suites 'src/test/resources/tests.xml'
	}

//	runWithWiremock = true
}

check {
	dependsOn arquillian
}

wiremock {
	params "--port=8765"
}

eclipse {
	classpath {
		plusConfigurations += [ configurations.apiCompileClasspath ]
	}
}
