<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="3350" started-at="2018-12-17T17:43:17Z" finished-at="2018-12-17T17:43:20Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="3350" started-at="2018-12-17T17:43:17Z" finished-at="2018-12-17T17:43:20Z">
      <class name="org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest">
        <test-method status="PASS" signature="arquillianBeforeSuite()[pri:0, instance:org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest@6895a785]" name="arquillianBeforeSuite" is-config="true" duration-ms="587" started-at="2018-12-17T17:43:16Z" finished-at="2018-12-17T17:43:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeSuite -->
        <test-method status="PASS" signature="arquillianBeforeClass()[pri:0, instance:org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest@6895a785]" name="arquillianBeforeClass" is-config="true" duration-ms="2200" started-at="2018-12-17T17:43:17Z" finished-at="2018-12-17T17:43:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest@6895a785]" name="arquillianBeforeTest" is-config="true" duration-ms="4" started-at="2018-12-17T17:43:19Z" finished-at="2018-12-17T17:43:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest.testCanCallStaticLoader()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="testCanCallStaticLoader()[pri:0, instance:org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest@6895a785]" name="testCanCallStaticLoader" duration-ms="217" started-at="2018-12-17T17:43:19Z" finished-at="2018-12-17T17:43:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCanCallStaticLoader -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest@6895a785]" name="arquillianAfterTest" is-config="true" duration-ms="3" started-at="2018-12-17T17:43:19Z" finished-at="2018-12-17T17:43:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest.testCanCallStaticLoader()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest@6895a785]" name="arquillianBeforeTest" is-config="true" duration-ms="1" started-at="2018-12-17T17:43:19Z" finished-at="2018-12-17T17:43:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest.testIllegalStateExceptionThrownWhenNoBaseUriOrUrlSpecified()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="PASS" signature="testIllegalStateExceptionThrownWhenNoBaseUriOrUrlSpecified()[pri:0, instance:org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest@6895a785]" name="testIllegalStateExceptionThrownWhenNoBaseUriOrUrlSpecified" duration-ms="59" started-at="2018-12-17T17:43:19Z" finished-at="2018-12-17T17:43:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIllegalStateExceptionThrownWhenNoBaseUriOrUrlSpecified -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest@6895a785]" name="arquillianAfterTest" is-config="true" duration-ms="2" started-at="2018-12-17T17:43:19Z" finished-at="2018-12-17T17:43:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest.testIllegalStateExceptionThrownWhenNoBaseUriOrUrlSpecified()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest@6895a785]" name="arquillianBeforeTest" is-config="true" duration-ms="1" started-at="2018-12-17T17:43:19Z" finished-at="2018-12-17T17:43:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest.testLastBaseUriOrBaseUrlCallWins() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="FAIL" signature="testLastBaseUriOrBaseUrlCallWins()[pri:0, instance:org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest@6895a785]" name="testLastBaseUriOrBaseUrlCallWins" duration-ms="819" started-at="2018-12-17T17:43:19Z" finished-at="2018-12-17T17:43:20Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [GET http://localhost:8080/right1] but found [GET http://localhost:8080/right1/]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [GET http://localhost:8080/right1] but found [GET http://localhost:8080/right1/]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest.testLastBaseUriOrBaseUrlCallWins(ProvidesRestClientBuilderTest.java:59)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:230)
at org.jboss.arquillian.testng.Arquillian$2.invoke(Arquillian.java:145)
at org.jboss.arquillian.container.test.impl.execution.LocalTestExecuter.execute(LocalTestExecuter.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:86)
at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:103)
at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:90)
at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:133)
at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:105)
at org.jboss.arquillian.core.impl.EventImpl.fire(EventImpl.java:62)
at org.jboss.arquillian.container.test.impl.execution.ContainerTestExecuter.execute(ContainerTestExecuter.java:36)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:86)
at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:103)
at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:90)
at org.jboss.arquillian.test.impl.TestContextHandler.createTestContext(TestContextHandler.java:116)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:86)
at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:95)
at org.jboss.arquillian.test.impl.TestContextHandler.createClassContext(TestContextHandler.java:83)
at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:86)
at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:95)
at org.jboss.arquillian.test.impl.TestContextHandler.createSuiteContext(TestContextHandler.java:69)
at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:86)
at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:95)
at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:133)
at org.jboss.arquillian.test.impl.EventTestRunnerAdaptor.test(EventTestRunnerAdaptor.java:139)
at org.jboss.arquillian.testng.Arquillian.run(Arquillian.java:138)
at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:242)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:579)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.jboss.arquillian.testng.container.TestNGTestRunner.execute(TestNGTestRunner.java:51)
at org.jboss.arquillian.protocol.servlet.runner.ServletTestRunner.executeTest(ServletTestRunner.java:139)
at org.jboss.arquillian.protocol.servlet.runner.ServletTestRunner.execute(ServletTestRunner.java:117)
at org.jboss.arquillian.protocol.servlet.runner.ServletTestRunner.doGet(ServletTestRunner.java:86)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:859)
at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:542)
at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)
at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)
at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1588)
at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)
at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1345)
at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)
at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:480)
at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1557)
at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)
at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1247)
at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)
at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:220)
at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)
at org.eclipse.jetty.server.Server.handle(Server.java:502)
at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:364)
at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:260)
at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)
at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)
at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)
at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)
at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)
at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)
at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)
at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)
at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)
at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastBaseUriOrBaseUrlCallWins -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest@6895a785]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-12-17T17:43:20Z" finished-at="2018-12-17T17:43:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest.testLastBaseUriOrBaseUrlCallWins() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest@6895a785]" name="arquillianAfterClass" is-config="true" duration-ms="21" started-at="2018-12-17T17:43:20Z" finished-at="2018-12-17T17:43:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
        <test-method status="PASS" signature="arquillianAfterSuite()[pri:0, instance:org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest@6895a785]" name="arquillianAfterSuite" is-config="true" duration-ms="16" started-at="2018-12-17T17:43:20Z" finished-at="2018-12-17T17:43:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterSuite -->
      </class> <!-- org.eclipse.microprofile.rest.client.tck.ProvidesRestClientBuilderTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
