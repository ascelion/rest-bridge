apply plugin: 'io.spring.dependency-management'

def versions = [
	slf4j: '1.7.25',
	asm: '7.0',
	cxf: '3.3.0',
	hamcrest: '2.1',
	jakarta: [
		annotation: '1.3.4',
		el: '3.0.2',
		interceptor: '1.2.4',
		jaxrs: '2.1.5',
		jaxb: '2.3.2',
		json: '1.1.5',
		jsonb: '1.0.1',
		servlet: '4.0.2'
	],
	micro: [
		rest: '1.2.1',
		config: '1.2',
	],

	'': ''
]

configurations {
	externalApi

	compileOnly.extendsFrom externalApi
	testCompileOnly.extendsFrom externalApi
	testRuntimeOnly.extendsFrom externalApi
}

dependencyManagement {
	generatedPomCustomization {
		enabled = false
	}

	imports {
		mavenBom "org.apache.cxf:cxf-parent:$versions.cxf"
		mavenBom 'org.glassfish.jersey:jersey-bom:2.28'
		mavenBom 'org.jboss.resteasy:resteasy-bom:3.6.2.Final'
		mavenBom 'org.jboss.arquillian:arquillian-bom:1.4.1.Final'
		mavenBom 'org.jboss.shrinkwrap:shrinkwrap-bom:1.2.6'
		mavenBom 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-bom:3.1.3'
		mavenBom 'org.jboss.weld:weld-core-bom:2.4.8.Final'
		mavenBom 'org.eclipse.jetty:jetty-bom:9.4.14.v20181114'
		mavenBom 'com.fasterxml.jackson:jackson-bom:2.9.7'
	}

	dependencies {
		dependency 'javax.validation:validation-api:2.0.1.Final'
		dependency 'javax.inject:javax.inject:1'
		dependency 'javax.enterprise:cdi-api:1.2'

		dependencySet( group: 'org.eclipse.microprofile.rest.client', version: versions.micro.rest) {
			entry 'microprofile-rest-client-api'
			entry 'microprofile-rest-client-tck'
		}
		dependency "org.apache.cxf:cxf-rt-rs-mp-client:$versions.cxf"

		dependency "org.eclipse.microprofile.config:microprofile-config-api:$versions.micro.config"
		dependency "org.apache.geronimo.config:geronimo-config-impl:$versions.micro.config"

		dependency 'org.hibernate:hibernate-validator:6.0.13.Final'
		dependency 'org.eclipse:yasson:1.0.2'
		dependency "org.ow2.asm:asm:$versions.asm"

		dependency 'commons-io:commons-io:2.6'
		dependency 'org.apache.commons:commons-text:1.6'
		dependency 'org.apache.commons:commons-lang3:3.8.1'
		dependency 'commons-codec:commons-codec:1.11'
		dependency 'commons-logging:commons-logging:1.2'
		dependency 'org.apache.httpcomponents:httpclient:4.5.6'
		dependency 'com.google.guava:guava:27.0.1-jre'
		dependency 'io.leangen.geantyref:geantyref:1.3.6'
		dependency 'org.javassist:javassist:3.24.1-GA'

		dependency 'org.jboss.arquillian.container:arquillian-jetty-embedded-9:1.0.0.CR3'
		dependency 'com.github.tomakehurst:wiremock:2.19.0'

		dependency "org.slf4j:slf4j-api:$versions.slf4j"
		dependency 'ch.qos.logback:logback-classic:1.2.3'
		dependency 'org.jboss:jandex:2.0.5.Final'

		dependency 'org.mockito:mockito-core:2.23.4'
		dependency 'junit:junit:4.12'

		dependencySet( group: 'org.hamcrest', version: '2.1' ) {
			entry 'hamcrest-core'
			entry 'hamcrest-library'
		}

		dependency 'org.testng:testng:6.14.3'
		dependency 'com.beust:jcommander:1.72'
	}
}

configurations.all { cf ->
	if( cf.name.endsWith( 'nnotationProcessor' ) ) {
		dependencies {
			add cf.name, 'org.projectlombok:lombok:1.18.4'
		}
	}

	resolutionStrategy.dependencySubstitution {
		substitute module( 'javax.servlet:javax.servlet-api' ) with module( "jakarta.servlet:jakarta.servlet-api:$versions.jakarta.servlet" )
		substitute module( 'javax.xml.bind:jaxb-api' ) with module ( "jakarta.xml.bind:jakarta.xml.bind-api:$versions.jakarta.jaxb" )
		substitute module( 'javax.json.bind:javax.json.bind-api' ) with module ( "jakarta.json.bind:jakarta.json.bind-api:$versions.jakarta.jsonb" )

		substitute module( 'javax.json:javax.json-api' ) with module ( "jakarta.json:jakarta.json-api:$versions.jakarta.json" )
		substitute module( 'org.glassfish:javax.json' ) with module ( "org.glassfish:jakarta.json:$versions.jakarta.json" )

		substitute module( 'javax.annotation:javax.annotation-api' ) with module( 'jakarta.annotation:jakarta.annotation-api:1.3.4' )
		substitute module( 'org.jboss.spec.javax.annotation:jboss-annotations-api_1.3_spec' ) with module( 'jakarta.annotation:jakarta.annotation-api:1.3.4' )

		substitute module( 'javax.ws.rs:javax.ws.rs-api' ) with module( "jakarta.ws.rs:jakarta.ws.rs-api:$versions.jakarta.jaxrs" )
		substitute module( 'org.jboss.spec.javax.ws.rs:jboss-jaxrs-api_2.1_spec' ) with module( "jakarta.ws.rs:jakarta.ws.rs-api:$versions.jakarta.jaxrs" )

		substitute module( 'javax.interceptor:javax.interceptor-api' ) with module( "jakarta.interceptor:jakarta.interceptor-api:$versions.jakarta.interceptor" )
		substitute module( 'org.jboss.spec.javax.interceptor:jboss-interceptors-api_1.2_spec' ) with module( "jakarta.interceptor:jakarta.interceptor-api:$versions.jakarta.interceptor" )

		substitute module( 'javax.el:javax.el-api' ) with module ( "jakarta.el:jakarta.el-api:$versions.jakarta.el" )
		substitute module( 'org.jboss.spec.javax.el:jboss-el-api_3.0_spec' ) with module ( "jakarta.el:jakarta.el-api:$versions.jakarta.el" )
		// EL implementation
		substitute module( 'org.glassfish:javax.el' ) with module ( "org.glassfish:jakarta.el:$versions.jakarta.el" )

		substitute module( 'org.glassfish.hk2.external:jakarta.inject' ) with module ( 'javax.inject:javax.inject:1' )

		if( mpLocal ) {
			substitute module('org.eclipse.microprofile.rest.client:microprofile-rest-client-api') with project( ':mp-local:api' )
			substitute module('org.eclipse.microprofile.rest.client:microprofile-rest-client-tck') with project( ':mp-local:tck' )
		}
	}
}
