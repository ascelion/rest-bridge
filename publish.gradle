def doPublish  = booleanProperty( 'doPublish' )
def isSnapshot = version.endsWith( '-SNAPSHOT' )
def isRelease  = !isSnapshot

def signKey    = "${rootProject.name}.sign.keyId"
def signSecret = "${rootProject.name}.sign.keySecret"
def bintrayUSR = "${rootProject.name}.bintray.username"
def bintrayPWD = "${rootProject.name}.bintray.password"

def gext       = gradle.ext

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	classifier = 'sources'
}

task javadocJar(type: Jar) {
	from javadoc
	classifier = 'javadoc'
}

publishing {
	publications {
		maven( MavenPublication ) {
			from components.java

			artifact sourcesJar
			artifact javadocJar

			artifactId = "${rootProject.name}-${project.name}"
		}
	}
	
	if( doPublish && gradle.hasProperty( bintrayUSR ) ) {
		repositories {
			maven {
				name = 'jfrog'
				url = "https://oss.jfrog.org/artifactory/oss-${isSnapshot ? 'snapshot' : 'release'}-local"

				credentials {
					username = gext[bintrayUSR]
					password = gradle.decryptPassword( gext[bintrayPWD] )
				}
			}
		}
	}
}

if( gradle.hasProperty( signKey ) ) {
	apply plugin: 'signing'

	ext['signing.gnupg.keyName'] = gext[signKey]

	signing {
		useGpgCmd()
		sign publishing.publications.maven
	}
}

if( isRelease && doPublish && gradle.hasProperty( bintrayUSR ) ) {
	apply plugin: 'com.jfrog.bintray'

	bintray {
		user = gext[bintrayUSR]
		key = gradle.decryptPassword( gext[bintrayPWD] )

		publications = [ 'maven' ]

		pkg {
			repo = 'repo'
			userOrg = 'ascelion'
			name = rootProject.name
			licenses = [ 'LGPL-3.0' ]
			vcsUrl = 'https://github.com/pa314159/rest-bridge'
			version {
				name = project.version

				gpg {
					sign = true
				}
			}
		}
	}
}
